{"version":3,"sources":["App.tsx","index.tsx"],"names":["themes","light","colors","primary","dark","options","App","useState","theme","setTheme","language","setLanguage","selectedMovie","selectMovie","selectedPeople","selectPeople","className","onClick","value","onChange","e","target","map","o","key","filter","ReactDOM","render","document","getElementById"],"mappings":"iNA4BMA,G,YAAiB,CACrBC,MAd2C,CAC3CC,OAAQ,CAAEC,QAAS,QAASC,KAAM,SAclCA,KAX0C,CAC1CF,OAAQ,CAAEC,QAAS,QAASC,KAAM,WAa9BC,EAAuB,CAAC,KAAM,MAmDrBC,EAjDH,WAAO,IAAD,EACUC,mBAAuB,SADjC,mBACTC,EADS,KACFC,EADE,OAEgBF,mBAAoB,MAFpC,mBAETG,EAFS,KAECC,EAFD,OAGqBJ,mBAAuB,MAH5C,mBAGTK,EAHS,KAGMC,EAHN,OAIuBN,mBAAwB,MAJ/C,mBAITO,EAJS,KAIOC,EAJP,KAehB,OACE,kBAAC,IAAD,CAAgBP,MAAOR,EAAOQ,GAAQE,SAAUA,GAC9C,yBAAKM,UAAU,WACb,wBAAIA,UAAU,SAAd,oBACA,6BACE,4BAAQC,QAdK,WAEnBR,EAD4B,UAAVD,EAAoB,OAAS,UAaVQ,UAAU,OAAzC,gBAGA,4BAAQE,MAAOR,EAAUS,SAZJ,SAACC,GAC5BT,EAAYS,EAAEC,OAAOH,SAYZb,EAAQiB,KAAI,SAACC,GAAD,OACX,4BAAQC,IAAKD,EAAGL,MAAOK,GACpBA,QAMT,yBAAKP,UAAU,cACb,kBAAC,IAAD,CACEA,UAAU,eACVC,QAASJ,EACTY,OAAQX,IAEV,kBAAC,IAAD,CACEE,UAAU,gBACVS,OAAQb,EACRK,QAASF,QCxErBW,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.e5e22dea.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport {\n  WidgetProvider,\n  IWidgetProvider,\n  MovieWidgetComponent,\n  PeopleWidgetComponent,\n  Languages,\n  Movie,\n  People,\n} from 'movie_widget';\nimport 'movie_widget/dist/index.css';\n\nimport './index.css';\n\nconst lightTheme: IWidgetProvider['theme'] = {\n  colors: { primary: 'green', dark: '#eee' },\n};\n\nconst darkTheme: IWidgetProvider['theme'] = {\n  colors: { primary: 'green', dark: '#000' },\n};\n\ninterface ITheme {\n  light: IWidgetProvider['theme'];\n  dark: IWidgetProvider['theme'];\n}\n\nconst themes: ITheme = {\n  light: lightTheme,\n  dark: darkTheme,\n};\n\nconst options: Languages[] = ['ru', 'en'];\n\nconst App = () => {\n  const [theme, setTheme] = useState<keyof ITheme>('light');\n  const [language, setLanguage] = useState<Languages>('en');\n  const [selectedMovie, selectMovie] = useState<Movie | null>(null);\n  const [selectedPeople, selectPeople] = useState<People | null>(null);\n\n  const handleChange = () => {\n    const nextTheme = theme === 'light' ? 'dark' : 'light';\n    setTheme(nextTheme);\n  };\n\n  const handleChangeLanguage = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setLanguage(e.target.value as Languages);\n  };\n\n  return (\n    <WidgetProvider theme={themes[theme]} language={language}>\n      <div className='wrapper'>\n        <h1 className='title'>My website title</h1>\n        <div>\n          <button onClick={handleChange} className='btn'>\n            Change Theme\n          </button>\n          <select value={language} onChange={handleChangeLanguage}>\n            {options.map((o) => (\n              <option key={o} value={o}>\n                {o}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className='widget-box'>\n          <MovieWidgetComponent\n            className='movie-widget'\n            onClick={selectMovie}\n            filter={selectedPeople}\n          />\n          <PeopleWidgetComponent\n            className='actors-widget'\n            filter={selectedMovie}\n            onClick={selectPeople}\n          />\n        </div>\n      </div>\n    </WidgetProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}